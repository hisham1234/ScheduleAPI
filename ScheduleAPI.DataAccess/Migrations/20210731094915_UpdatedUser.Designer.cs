// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ScheduleAPI.DataAccess;

namespace ScheduleAPI.DataAccess.Migrations
{
    [DbContext(typeof(ScheduleDbContext))]
    [Migration("20210731094915_UpdatedUser")]
    partial class UpdatedUser
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ScheduleAPI.Models.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Schedule");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Learning the newest Version",
                            EndDateTime = new DateTime(2021, 8, 3, 18, 49, 15, 73, DateTimeKind.Local).AddTicks(3744),
                            StartDateTime = new DateTime(2021, 7, 31, 18, 49, 15, 71, DateTimeKind.Local).AddTicks(4479),
                            Title = "Learning .Net Core",
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            Description = "watch tutorial",
                            EndDateTime = new DateTime(2021, 8, 3, 18, 49, 15, 73, DateTimeKind.Local).AddTicks(4573),
                            StartDateTime = new DateTime(2021, 7, 31, 18, 49, 15, 73, DateTimeKind.Local).AddTicks(4568),
                            Title = "Learning Angular",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("ScheduleAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Password = "123",
                            UserName = "Hisham"
                        },
                        new
                        {
                            Id = 2,
                            Password = "321",
                            UserName = "Fary"
                        });
                });

            modelBuilder.Entity("ScheduleAPI.Models.Schedule", b =>
                {
                    b.HasOne("ScheduleAPI.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
